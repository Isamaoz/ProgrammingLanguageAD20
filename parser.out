Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIFF
    ESIGUAL
    IFELSE
    MAYORIGUAL
    MAYORQUE
    MENORIGUAL
    MENORQUE
    STRING

Grammar

Rule 0     S' -> program
Rule 1     program -> st var_dec procedure main_block FINISH
Rule 2     st -> START
Rule 3     var_dec -> DECLARATION decl ENDECLARATION
Rule 4     var_dec -> <empty>
Rule 5     decl -> type variable PUNTOYCOMA
Rule 6     decl -> decl type variable PUNTOYCOMA
Rule 7     decl -> decl dimtype PUNTOYCOMA
Rule 8     variable -> ID
Rule 9     variable -> variable COMA ID
Rule 10    type -> INT
Rule 11    type -> FLOAT
Rule 12    dimtype -> VECTOR DCLVECTOR
Rule 13    dimtype -> MATRIX DCLMATRIX
Rule 14    dimtype -> CUBE DCLCUBE
Rule 15    DCLVECTOR -> ID NUMBER
Rule 16    DCLMATRIX -> ID NUMBER NUMBER
Rule 17    DCLCUBE -> ID NUMBER NUMBER NUMBER
Rule 18    procedure -> MODULE iddd beggg stat enddd procedure
Rule 19    procedure -> <empty>
Rule 20    iddd -> ID
Rule 21    beggg -> BEGIN
Rule 22    beggg -> <empty>
Rule 23    enddd -> END
Rule 24    enddd -> <empty>
Rule 25    stat -> estatuto stat
Rule 26    stat -> <empty>
Rule 27    main_block -> MAIN be stat END
Rule 28    be -> BEGIN
Rule 29    estatuto -> CALL ID PUNTOYCOMA
Rule 30    estatuto -> IF expresion beg stat els stat END
Rule 31    estatuto -> IF expresion beg stat END
Rule 32    beg -> BEGIN
Rule 33    els -> ELSE
Rule 34    estatuto -> pid ASSIGN E PUNTOYCOMA
Rule 35    pid -> ID
Rule 36    pid -> vec1
Rule 37    pid -> mat1
Rule 38    pid -> cub1
Rule 39    E -> E PLUS T
Rule 40    E -> E MINUS T
Rule 41    E -> T
Rule 42    T -> T TIMES F
Rule 43    T -> T DIVIDE F
Rule 44    T -> F
Rule 45    F -> OP
Rule 46    F -> LPAR E RPAR
Rule 47    expresion -> LPAR EL RPAR
Rule 48    EL -> EL OR TL
Rule 49    EL -> TL NOT
Rule 50    EL -> TL
Rule 51    TL -> TL AND FL
Rule 52    TL -> FL
Rule 53    FL -> OP opLogico OP
Rule 54    FL -> LPAR EL LPAR
Rule 55    opLogico -> RELATIONAL
Rule 56    OP -> NUMBER
Rule 57    OP -> FLOATNUMBER
Rule 58    vec1 -> vec
Rule 59    vec -> ID LBRACKET NUMBER RBRACKET
Rule 60    vec -> ID LBRACKET ID RBRACKET
Rule 61    OP -> mat1
Rule 62    mat1 -> mat
Rule 63    mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
Rule 64    mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
Rule 65    mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
Rule 66    mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
Rule 67    OP -> cub1
Rule 68    cub1 -> cub
Rule 69    cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
Rule 70    cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
Rule 71    cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
Rule 72    cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
Rule 73    cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
Rule 74    cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
Rule 75    cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
Rule 76    cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
Rule 77    OP -> ID
Rule 78    estatuto -> FOR expresion_for beg1 stat END
Rule 79    beg1 -> BEGIN
Rule 80    expresion_for -> LPAR id1 IN numb RPAR
Rule 81    expresion_for -> LPAR id1 IN idx RPAR
Rule 82    numb -> NUMBER
Rule 83    numb -> FLOATNUMBER
Rule 84    idx -> ID
Rule 85    id1 -> ID
Rule 86    estatuto -> WHILE expresion BB stat END
Rule 87    BB -> BEGIN
Rule 88    estatuto -> doo stat wh expresion
Rule 89    doo -> DO
Rule 90    wh -> DWHILE
Rule 91    estatuto -> OUTPUT OP PUNTOYCOMA
Rule 92    estatuto -> INPUT ID PUNTOYCOMA

Terminals, with rules where they appear

AND                  : 51
ASSIGN               : 34
BEGIN                : 21 28 32 79 87
CALL                 : 29
COMA                 : 9
CUBE                 : 14
DECLARATION          : 3
DIFF                 : 
DIVIDE               : 43
DO                   : 89
DWHILE               : 90
ELSE                 : 33
END                  : 23 27 30 31 78 86
ENDECLARATION        : 3
ESIGUAL              : 
FINISH               : 1
FLOAT                : 11
FLOATNUMBER          : 57 83
FOR                  : 78
ID                   : 8 9 15 16 17 20 29 35 59 60 60 63 64 64 65 65 65 66 66 69 70 70 71 71 72 72 72 73 73 74 74 74 75 75 75 76 76 76 76 77 84 85 92
IF                   : 30 31
IFELSE               : 
IN                   : 80 81
INPUT                : 92
INT                  : 10
LBRACKET             : 59 60 63 63 64 64 65 65 66 66 69 69 69 70 70 70 71 71 71 72 72 72 73 73 73 74 74 74 75 75 75 76 76 76
LPAR                 : 46 47 54 54 80 81
MAIN                 : 27
MATRIX               : 13
MAYORIGUAL           : 
MAYORQUE             : 
MENORIGUAL           : 
MENORQUE             : 
MINUS                : 40
MODULE               : 18
NOT                  : 49
NUMBER               : 15 16 16 17 17 17 56 59 63 63 64 66 69 69 69 70 70 71 71 72 73 73 74 75 82
OR                   : 48
OUTPUT               : 91
PLUS                 : 39
PUNTOYCOMA           : 5 6 7 29 34 91 92
RBRACKET             : 59 60 63 63 64 64 65 65 66 66 69 69 69 70 70 70 71 71 71 72 72 72 73 73 73 74 74 74 75 75 75 76 76 76
RELATIONAL           : 55
RPAR                 : 46 47 80 81
START                : 2
STRING               : 
TIMES                : 42
VECTOR               : 12
WHILE                : 86
error                : 

Nonterminals, with rules where they appear

BB                   : 86
DCLCUBE              : 14
DCLMATRIX            : 13
DCLVECTOR            : 12
E                    : 34 39 40 46
EL                   : 47 48 54
F                    : 42 43 44
FL                   : 51 52
OP                   : 45 53 53 91
T                    : 39 40 41 42 43
TL                   : 48 49 50 51
be                   : 27
beg                  : 30 31
beg1                 : 78
beggg                : 18
cub                  : 68
cub1                 : 38 67
decl                 : 3 6 7
dimtype              : 7
doo                  : 88
els                  : 30
enddd                : 18
estatuto             : 25
expresion            : 30 31 86 88
expresion_for        : 78
id1                  : 80 81
iddd                 : 18
idx                  : 81
main_block           : 1
mat                  : 62
mat1                 : 37 61
numb                 : 80
opLogico             : 53
pid                  : 34
procedure            : 1 18
program              : 0
st                   : 1
stat                 : 18 25 27 30 30 31 78 86 88
type                 : 5 6
var_dec              : 1
variable             : 5 6 9
vec                  : 58
vec1                 : 36
wh                   : 88

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . st var_dec procedure main_block FINISH
    (2) st -> . START

    START           shift and go to state 3

    program                        shift and go to state 1
    st                             shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> st . var_dec procedure main_block FINISH
    (3) var_dec -> . DECLARATION decl ENDECLARATION
    (4) var_dec -> .

    DECLARATION     shift and go to state 5
    MODULE          reduce using rule 4 (var_dec -> .)
    MAIN            reduce using rule 4 (var_dec -> .)

    var_dec                        shift and go to state 4

state 3

    (2) st -> START .

    DECLARATION     reduce using rule 2 (st -> START .)
    MODULE          reduce using rule 2 (st -> START .)
    MAIN            reduce using rule 2 (st -> START .)


state 4

    (1) program -> st var_dec . procedure main_block FINISH
    (18) procedure -> . MODULE iddd beggg stat enddd procedure
    (19) procedure -> .

    MODULE          shift and go to state 7
    MAIN            reduce using rule 19 (procedure -> .)

    procedure                      shift and go to state 6

state 5

    (3) var_dec -> DECLARATION . decl ENDECLARATION
    (5) decl -> . type variable PUNTOYCOMA
    (6) decl -> . decl type variable PUNTOYCOMA
    (7) decl -> . decl dimtype PUNTOYCOMA
    (10) type -> . INT
    (11) type -> . FLOAT

    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    decl                           shift and go to state 8
    type                           shift and go to state 9

state 6

    (1) program -> st var_dec procedure . main_block FINISH
    (27) main_block -> . MAIN be stat END

    MAIN            shift and go to state 13

    main_block                     shift and go to state 12

state 7

    (18) procedure -> MODULE . iddd beggg stat enddd procedure
    (20) iddd -> . ID

    ID              shift and go to state 15

    iddd                           shift and go to state 14

state 8

    (3) var_dec -> DECLARATION decl . ENDECLARATION
    (6) decl -> decl . type variable PUNTOYCOMA
    (7) decl -> decl . dimtype PUNTOYCOMA
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) dimtype -> . VECTOR DCLVECTOR
    (13) dimtype -> . MATRIX DCLMATRIX
    (14) dimtype -> . CUBE DCLCUBE

    ENDECLARATION   shift and go to state 16
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    VECTOR          shift and go to state 19
    MATRIX          shift and go to state 20
    CUBE            shift and go to state 21

    type                           shift and go to state 17
    dimtype                        shift and go to state 18

state 9

    (5) decl -> type . variable PUNTOYCOMA
    (8) variable -> . ID
    (9) variable -> . variable COMA ID

    ID              shift and go to state 23

    variable                       shift and go to state 22

state 10

    (10) type -> INT .

    ID              reduce using rule 10 (type -> INT .)


state 11

    (11) type -> FLOAT .

    ID              reduce using rule 11 (type -> FLOAT .)


state 12

    (1) program -> st var_dec procedure main_block . FINISH

    FINISH          shift and go to state 24


state 13

    (27) main_block -> MAIN . be stat END
    (28) be -> . BEGIN

    BEGIN           shift and go to state 26

    be                             shift and go to state 25

state 14

    (18) procedure -> MODULE iddd . beggg stat enddd procedure
    (21) beggg -> . BEGIN
    (22) beggg -> .

    BEGIN           shift and go to state 28
    CALL            reduce using rule 22 (beggg -> .)
    IF              reduce using rule 22 (beggg -> .)
    FOR             reduce using rule 22 (beggg -> .)
    WHILE           reduce using rule 22 (beggg -> .)
    OUTPUT          reduce using rule 22 (beggg -> .)
    INPUT           reduce using rule 22 (beggg -> .)
    ID              reduce using rule 22 (beggg -> .)
    DO              reduce using rule 22 (beggg -> .)
    END             reduce using rule 22 (beggg -> .)
    MODULE          reduce using rule 22 (beggg -> .)
    MAIN            reduce using rule 22 (beggg -> .)

    beggg                          shift and go to state 27

state 15

    (20) iddd -> ID .

    BEGIN           reduce using rule 20 (iddd -> ID .)
    CALL            reduce using rule 20 (iddd -> ID .)
    IF              reduce using rule 20 (iddd -> ID .)
    FOR             reduce using rule 20 (iddd -> ID .)
    WHILE           reduce using rule 20 (iddd -> ID .)
    OUTPUT          reduce using rule 20 (iddd -> ID .)
    INPUT           reduce using rule 20 (iddd -> ID .)
    ID              reduce using rule 20 (iddd -> ID .)
    DO              reduce using rule 20 (iddd -> ID .)
    END             reduce using rule 20 (iddd -> ID .)
    MODULE          reduce using rule 20 (iddd -> ID .)
    MAIN            reduce using rule 20 (iddd -> ID .)


state 16

    (3) var_dec -> DECLARATION decl ENDECLARATION .

    MODULE          reduce using rule 3 (var_dec -> DECLARATION decl ENDECLARATION .)
    MAIN            reduce using rule 3 (var_dec -> DECLARATION decl ENDECLARATION .)


state 17

    (6) decl -> decl type . variable PUNTOYCOMA
    (8) variable -> . ID
    (9) variable -> . variable COMA ID

    ID              shift and go to state 23

    variable                       shift and go to state 29

state 18

    (7) decl -> decl dimtype . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 30


state 19

    (12) dimtype -> VECTOR . DCLVECTOR
    (15) DCLVECTOR -> . ID NUMBER

    ID              shift and go to state 32

    DCLVECTOR                      shift and go to state 31

state 20

    (13) dimtype -> MATRIX . DCLMATRIX
    (16) DCLMATRIX -> . ID NUMBER NUMBER

    ID              shift and go to state 34

    DCLMATRIX                      shift and go to state 33

state 21

    (14) dimtype -> CUBE . DCLCUBE
    (17) DCLCUBE -> . ID NUMBER NUMBER NUMBER

    ID              shift and go to state 36

    DCLCUBE                        shift and go to state 35

state 22

    (5) decl -> type variable . PUNTOYCOMA
    (9) variable -> variable . COMA ID

    PUNTOYCOMA      shift and go to state 37
    COMA            shift and go to state 38


state 23

    (8) variable -> ID .

    PUNTOYCOMA      reduce using rule 8 (variable -> ID .)
    COMA            reduce using rule 8 (variable -> ID .)


state 24

    (1) program -> st var_dec procedure main_block FINISH .

    $end            reduce using rule 1 (program -> st var_dec procedure main_block FINISH .)


state 25

    (27) main_block -> MAIN be . stat END
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 39
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 26

    (28) be -> BEGIN .

    CALL            reduce using rule 28 (be -> BEGIN .)
    IF              reduce using rule 28 (be -> BEGIN .)
    FOR             reduce using rule 28 (be -> BEGIN .)
    WHILE           reduce using rule 28 (be -> BEGIN .)
    OUTPUT          reduce using rule 28 (be -> BEGIN .)
    INPUT           reduce using rule 28 (be -> BEGIN .)
    ID              reduce using rule 28 (be -> BEGIN .)
    DO              reduce using rule 28 (be -> BEGIN .)
    END             reduce using rule 28 (be -> BEGIN .)


state 27

    (18) procedure -> MODULE iddd beggg . stat enddd procedure
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 57
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 28

    (21) beggg -> BEGIN .

    CALL            reduce using rule 21 (beggg -> BEGIN .)
    IF              reduce using rule 21 (beggg -> BEGIN .)
    FOR             reduce using rule 21 (beggg -> BEGIN .)
    WHILE           reduce using rule 21 (beggg -> BEGIN .)
    OUTPUT          reduce using rule 21 (beggg -> BEGIN .)
    INPUT           reduce using rule 21 (beggg -> BEGIN .)
    ID              reduce using rule 21 (beggg -> BEGIN .)
    DO              reduce using rule 21 (beggg -> BEGIN .)
    END             reduce using rule 21 (beggg -> BEGIN .)
    MODULE          reduce using rule 21 (beggg -> BEGIN .)
    MAIN            reduce using rule 21 (beggg -> BEGIN .)


state 29

    (6) decl -> decl type variable . PUNTOYCOMA
    (9) variable -> variable . COMA ID

    PUNTOYCOMA      shift and go to state 58
    COMA            shift and go to state 38


state 30

    (7) decl -> decl dimtype PUNTOYCOMA .

    ENDECLARATION   reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)
    INT             reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)
    FLOAT           reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)
    VECTOR          reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)
    MATRIX          reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)
    CUBE            reduce using rule 7 (decl -> decl dimtype PUNTOYCOMA .)


state 31

    (12) dimtype -> VECTOR DCLVECTOR .

    PUNTOYCOMA      reduce using rule 12 (dimtype -> VECTOR DCLVECTOR .)


state 32

    (15) DCLVECTOR -> ID . NUMBER

    NUMBER          shift and go to state 59


state 33

    (13) dimtype -> MATRIX DCLMATRIX .

    PUNTOYCOMA      reduce using rule 13 (dimtype -> MATRIX DCLMATRIX .)


state 34

    (16) DCLMATRIX -> ID . NUMBER NUMBER

    NUMBER          shift and go to state 60


state 35

    (14) dimtype -> CUBE DCLCUBE .

    PUNTOYCOMA      reduce using rule 14 (dimtype -> CUBE DCLCUBE .)


state 36

    (17) DCLCUBE -> ID . NUMBER NUMBER NUMBER

    NUMBER          shift and go to state 61


state 37

    (5) decl -> type variable PUNTOYCOMA .

    ENDECLARATION   reduce using rule 5 (decl -> type variable PUNTOYCOMA .)
    INT             reduce using rule 5 (decl -> type variable PUNTOYCOMA .)
    FLOAT           reduce using rule 5 (decl -> type variable PUNTOYCOMA .)
    VECTOR          reduce using rule 5 (decl -> type variable PUNTOYCOMA .)
    MATRIX          reduce using rule 5 (decl -> type variable PUNTOYCOMA .)
    CUBE            reduce using rule 5 (decl -> type variable PUNTOYCOMA .)


state 38

    (9) variable -> variable COMA . ID

    ID              shift and go to state 62


state 39

    (27) main_block -> MAIN be stat . END

    END             shift and go to state 63


state 40

    (25) stat -> estatuto . stat
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    estatuto                       shift and go to state 40
    stat                           shift and go to state 64
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 41

    (29) estatuto -> CALL . ID PUNTOYCOMA

    ID              shift and go to state 65


state 42

    (35) pid -> ID .
    (59) vec -> ID . LBRACKET NUMBER RBRACKET
    (60) vec -> ID . LBRACKET ID RBRACKET
    (63) mat -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 35 (pid -> ID .)
    LBRACKET        shift and go to state 66


state 43

    (30) estatuto -> IF . expresion beg stat els stat END
    (31) estatuto -> IF . expresion beg stat END
    (47) expresion -> . LPAR EL RPAR

    LPAR            shift and go to state 68

    expresion                      shift and go to state 67

state 44

    (34) estatuto -> pid . ASSIGN E PUNTOYCOMA

    ASSIGN          shift and go to state 69


state 45

    (78) estatuto -> FOR . expresion_for beg1 stat END
    (80) expresion_for -> . LPAR id1 IN numb RPAR
    (81) expresion_for -> . LPAR id1 IN idx RPAR

    LPAR            shift and go to state 71

    expresion_for                  shift and go to state 70

state 46

    (86) estatuto -> WHILE . expresion BB stat END
    (47) expresion -> . LPAR EL RPAR

    LPAR            shift and go to state 68

    expresion                      shift and go to state 72

state 47

    (88) estatuto -> doo . stat wh expresion
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    doo                            shift and go to state 47
    stat                           shift and go to state 73
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 48

    (91) estatuto -> OUTPUT . OP PUNTOYCOMA
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    OP                             shift and go to state 74
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 49

    (92) estatuto -> INPUT . ID PUNTOYCOMA

    ID              shift and go to state 80


state 50

    (36) pid -> vec1 .

    ASSIGN          reduce using rule 36 (pid -> vec1 .)


state 51

    (37) pid -> mat1 .

    ASSIGN          reduce using rule 37 (pid -> mat1 .)


state 52

    (38) pid -> cub1 .

    ASSIGN          reduce using rule 38 (pid -> cub1 .)


state 53

    (89) doo -> DO .

    CALL            reduce using rule 89 (doo -> DO .)
    IF              reduce using rule 89 (doo -> DO .)
    FOR             reduce using rule 89 (doo -> DO .)
    WHILE           reduce using rule 89 (doo -> DO .)
    OUTPUT          reduce using rule 89 (doo -> DO .)
    INPUT           reduce using rule 89 (doo -> DO .)
    ID              reduce using rule 89 (doo -> DO .)
    DO              reduce using rule 89 (doo -> DO .)
    DWHILE          reduce using rule 89 (doo -> DO .)


state 54

    (58) vec1 -> vec .

    ASSIGN          reduce using rule 58 (vec1 -> vec .)


state 55

    (62) mat1 -> mat .

    ASSIGN          reduce using rule 62 (mat1 -> mat .)
    PUNTOYCOMA      reduce using rule 62 (mat1 -> mat .)
    PLUS            reduce using rule 62 (mat1 -> mat .)
    MINUS           reduce using rule 62 (mat1 -> mat .)
    TIMES           reduce using rule 62 (mat1 -> mat .)
    DIVIDE          reduce using rule 62 (mat1 -> mat .)
    RELATIONAL      reduce using rule 62 (mat1 -> mat .)
    RPAR            reduce using rule 62 (mat1 -> mat .)
    OR              reduce using rule 62 (mat1 -> mat .)
    NOT             reduce using rule 62 (mat1 -> mat .)
    AND             reduce using rule 62 (mat1 -> mat .)
    LPAR            reduce using rule 62 (mat1 -> mat .)


state 56

    (68) cub1 -> cub .

    ASSIGN          reduce using rule 68 (cub1 -> cub .)
    PUNTOYCOMA      reduce using rule 68 (cub1 -> cub .)
    PLUS            reduce using rule 68 (cub1 -> cub .)
    MINUS           reduce using rule 68 (cub1 -> cub .)
    TIMES           reduce using rule 68 (cub1 -> cub .)
    DIVIDE          reduce using rule 68 (cub1 -> cub .)
    RELATIONAL      reduce using rule 68 (cub1 -> cub .)
    RPAR            reduce using rule 68 (cub1 -> cub .)
    OR              reduce using rule 68 (cub1 -> cub .)
    NOT             reduce using rule 68 (cub1 -> cub .)
    AND             reduce using rule 68 (cub1 -> cub .)
    LPAR            reduce using rule 68 (cub1 -> cub .)


state 57

    (18) procedure -> MODULE iddd beggg stat . enddd procedure
    (23) enddd -> . END
    (24) enddd -> .

    END             shift and go to state 82
    MODULE          reduce using rule 24 (enddd -> .)
    MAIN            reduce using rule 24 (enddd -> .)

    enddd                          shift and go to state 81

state 58

    (6) decl -> decl type variable PUNTOYCOMA .

    ENDECLARATION   reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)
    INT             reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)
    FLOAT           reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)
    VECTOR          reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)
    MATRIX          reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)
    CUBE            reduce using rule 6 (decl -> decl type variable PUNTOYCOMA .)


state 59

    (15) DCLVECTOR -> ID NUMBER .

    PUNTOYCOMA      reduce using rule 15 (DCLVECTOR -> ID NUMBER .)


state 60

    (16) DCLMATRIX -> ID NUMBER . NUMBER

    NUMBER          shift and go to state 83


state 61

    (17) DCLCUBE -> ID NUMBER . NUMBER NUMBER

    NUMBER          shift and go to state 84


state 62

    (9) variable -> variable COMA ID .

    PUNTOYCOMA      reduce using rule 9 (variable -> variable COMA ID .)
    COMA            reduce using rule 9 (variable -> variable COMA ID .)


state 63

    (27) main_block -> MAIN be stat END .

    FINISH          reduce using rule 27 (main_block -> MAIN be stat END .)


state 64

    (25) stat -> estatuto stat .

    END             reduce using rule 25 (stat -> estatuto stat .)
    MODULE          reduce using rule 25 (stat -> estatuto stat .)
    MAIN            reduce using rule 25 (stat -> estatuto stat .)
    ELSE            reduce using rule 25 (stat -> estatuto stat .)
    DWHILE          reduce using rule 25 (stat -> estatuto stat .)


state 65

    (29) estatuto -> CALL ID . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 85


state 66

    (59) vec -> ID LBRACKET . NUMBER RBRACKET
    (60) vec -> ID LBRACKET . ID RBRACKET
    (63) mat -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    NUMBER          shift and go to state 87
    ID              shift and go to state 86


state 67

    (30) estatuto -> IF expresion . beg stat els stat END
    (31) estatuto -> IF expresion . beg stat END
    (32) beg -> . BEGIN

    BEGIN           shift and go to state 89

    beg                            shift and go to state 88

state 68

    (47) expresion -> LPAR . EL RPAR
    (48) EL -> . EL OR TL
    (49) EL -> . TL NOT
    (50) EL -> . TL
    (51) TL -> . TL AND FL
    (52) TL -> . FL
    (53) FL -> . OP opLogico OP
    (54) FL -> . LPAR EL LPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 90
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    EL                             shift and go to state 91
    TL                             shift and go to state 92
    FL                             shift and go to state 93
    OP                             shift and go to state 94
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 69

    (34) estatuto -> pid ASSIGN . E PUNTOYCOMA
    (39) E -> . E PLUS T
    (40) E -> . E MINUS T
    (41) E -> . T
    (42) T -> . T TIMES F
    (43) T -> . T DIVIDE F
    (44) T -> . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    E                              shift and go to state 95
    T                              shift and go to state 96
    F                              shift and go to state 97
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 70

    (78) estatuto -> FOR expresion_for . beg1 stat END
    (79) beg1 -> . BEGIN

    BEGIN           shift and go to state 101

    beg1                           shift and go to state 100

state 71

    (80) expresion_for -> LPAR . id1 IN numb RPAR
    (81) expresion_for -> LPAR . id1 IN idx RPAR
    (85) id1 -> . ID

    ID              shift and go to state 103

    id1                            shift and go to state 102

state 72

    (86) estatuto -> WHILE expresion . BB stat END
    (87) BB -> . BEGIN

    BEGIN           shift and go to state 105

    BB                             shift and go to state 104

state 73

    (88) estatuto -> doo stat . wh expresion
    (90) wh -> . DWHILE

    DWHILE          shift and go to state 107

    wh                             shift and go to state 106

state 74

    (91) estatuto -> OUTPUT OP . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 108


state 75

    (56) OP -> NUMBER .

    PUNTOYCOMA      reduce using rule 56 (OP -> NUMBER .)
    PLUS            reduce using rule 56 (OP -> NUMBER .)
    MINUS           reduce using rule 56 (OP -> NUMBER .)
    TIMES           reduce using rule 56 (OP -> NUMBER .)
    DIVIDE          reduce using rule 56 (OP -> NUMBER .)
    RELATIONAL      reduce using rule 56 (OP -> NUMBER .)
    RPAR            reduce using rule 56 (OP -> NUMBER .)
    OR              reduce using rule 56 (OP -> NUMBER .)
    NOT             reduce using rule 56 (OP -> NUMBER .)
    AND             reduce using rule 56 (OP -> NUMBER .)
    LPAR            reduce using rule 56 (OP -> NUMBER .)


state 76

    (57) OP -> FLOATNUMBER .

    PUNTOYCOMA      reduce using rule 57 (OP -> FLOATNUMBER .)
    PLUS            reduce using rule 57 (OP -> FLOATNUMBER .)
    MINUS           reduce using rule 57 (OP -> FLOATNUMBER .)
    TIMES           reduce using rule 57 (OP -> FLOATNUMBER .)
    DIVIDE          reduce using rule 57 (OP -> FLOATNUMBER .)
    RELATIONAL      reduce using rule 57 (OP -> FLOATNUMBER .)
    RPAR            reduce using rule 57 (OP -> FLOATNUMBER .)
    OR              reduce using rule 57 (OP -> FLOATNUMBER .)
    NOT             reduce using rule 57 (OP -> FLOATNUMBER .)
    AND             reduce using rule 57 (OP -> FLOATNUMBER .)
    LPAR            reduce using rule 57 (OP -> FLOATNUMBER .)


state 77

    (61) OP -> mat1 .

    PUNTOYCOMA      reduce using rule 61 (OP -> mat1 .)
    PLUS            reduce using rule 61 (OP -> mat1 .)
    MINUS           reduce using rule 61 (OP -> mat1 .)
    TIMES           reduce using rule 61 (OP -> mat1 .)
    DIVIDE          reduce using rule 61 (OP -> mat1 .)
    RELATIONAL      reduce using rule 61 (OP -> mat1 .)
    RPAR            reduce using rule 61 (OP -> mat1 .)
    OR              reduce using rule 61 (OP -> mat1 .)
    NOT             reduce using rule 61 (OP -> mat1 .)
    AND             reduce using rule 61 (OP -> mat1 .)
    LPAR            reduce using rule 61 (OP -> mat1 .)


state 78

    (67) OP -> cub1 .

    PUNTOYCOMA      reduce using rule 67 (OP -> cub1 .)
    PLUS            reduce using rule 67 (OP -> cub1 .)
    MINUS           reduce using rule 67 (OP -> cub1 .)
    TIMES           reduce using rule 67 (OP -> cub1 .)
    DIVIDE          reduce using rule 67 (OP -> cub1 .)
    RELATIONAL      reduce using rule 67 (OP -> cub1 .)
    RPAR            reduce using rule 67 (OP -> cub1 .)
    OR              reduce using rule 67 (OP -> cub1 .)
    NOT             reduce using rule 67 (OP -> cub1 .)
    AND             reduce using rule 67 (OP -> cub1 .)
    LPAR            reduce using rule 67 (OP -> cub1 .)


state 79

    (77) OP -> ID .
    (63) mat -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID . LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    PUNTOYCOMA      reduce using rule 77 (OP -> ID .)
    PLUS            reduce using rule 77 (OP -> ID .)
    MINUS           reduce using rule 77 (OP -> ID .)
    TIMES           reduce using rule 77 (OP -> ID .)
    DIVIDE          reduce using rule 77 (OP -> ID .)
    RELATIONAL      reduce using rule 77 (OP -> ID .)
    RPAR            reduce using rule 77 (OP -> ID .)
    OR              reduce using rule 77 (OP -> ID .)
    NOT             reduce using rule 77 (OP -> ID .)
    AND             reduce using rule 77 (OP -> ID .)
    LPAR            reduce using rule 77 (OP -> ID .)
    LBRACKET        shift and go to state 109


state 80

    (92) estatuto -> INPUT ID . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 110


state 81

    (18) procedure -> MODULE iddd beggg stat enddd . procedure
    (18) procedure -> . MODULE iddd beggg stat enddd procedure
    (19) procedure -> .

    MODULE          shift and go to state 7
    MAIN            reduce using rule 19 (procedure -> .)

    procedure                      shift and go to state 111

state 82

    (23) enddd -> END .

    MODULE          reduce using rule 23 (enddd -> END .)
    MAIN            reduce using rule 23 (enddd -> END .)


state 83

    (16) DCLMATRIX -> ID NUMBER NUMBER .

    PUNTOYCOMA      reduce using rule 16 (DCLMATRIX -> ID NUMBER NUMBER .)


state 84

    (17) DCLCUBE -> ID NUMBER NUMBER . NUMBER

    NUMBER          shift and go to state 112


state 85

    (29) estatuto -> CALL ID PUNTOYCOMA .

    CALL            reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    IF              reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    FOR             reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    WHILE           reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    OUTPUT          reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    INPUT           reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    ID              reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    DO              reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    END             reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    MODULE          reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    MAIN            reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    ELSE            reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)
    DWHILE          reduce using rule 29 (estatuto -> CALL ID PUNTOYCOMA .)


state 86

    (60) vec -> ID LBRACKET ID . RBRACKET
    (65) mat -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET
    (73) cub -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 113


state 87

    (59) vec -> ID LBRACKET NUMBER . RBRACKET
    (63) mat -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET
    (69) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 114


state 88

    (30) estatuto -> IF expresion beg . stat els stat END
    (31) estatuto -> IF expresion beg . stat END
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 115
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 89

    (32) beg -> BEGIN .

    CALL            reduce using rule 32 (beg -> BEGIN .)
    IF              reduce using rule 32 (beg -> BEGIN .)
    FOR             reduce using rule 32 (beg -> BEGIN .)
    WHILE           reduce using rule 32 (beg -> BEGIN .)
    OUTPUT          reduce using rule 32 (beg -> BEGIN .)
    INPUT           reduce using rule 32 (beg -> BEGIN .)
    ID              reduce using rule 32 (beg -> BEGIN .)
    DO              reduce using rule 32 (beg -> BEGIN .)
    ELSE            reduce using rule 32 (beg -> BEGIN .)
    END             reduce using rule 32 (beg -> BEGIN .)


state 90

    (54) FL -> LPAR . EL LPAR
    (48) EL -> . EL OR TL
    (49) EL -> . TL NOT
    (50) EL -> . TL
    (51) TL -> . TL AND FL
    (52) TL -> . FL
    (53) FL -> . OP opLogico OP
    (54) FL -> . LPAR EL LPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 90
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    EL                             shift and go to state 116
    TL                             shift and go to state 92
    FL                             shift and go to state 93
    OP                             shift and go to state 94
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 91

    (47) expresion -> LPAR EL . RPAR
    (48) EL -> EL . OR TL

    RPAR            shift and go to state 117
    OR              shift and go to state 118


state 92

    (49) EL -> TL . NOT
    (50) EL -> TL .
    (51) TL -> TL . AND FL

    NOT             shift and go to state 119
    RPAR            reduce using rule 50 (EL -> TL .)
    OR              reduce using rule 50 (EL -> TL .)
    LPAR            reduce using rule 50 (EL -> TL .)
    AND             shift and go to state 120


state 93

    (52) TL -> FL .

    RPAR            reduce using rule 52 (TL -> FL .)
    OR              reduce using rule 52 (TL -> FL .)
    NOT             reduce using rule 52 (TL -> FL .)
    AND             reduce using rule 52 (TL -> FL .)
    LPAR            reduce using rule 52 (TL -> FL .)


state 94

    (53) FL -> OP . opLogico OP
    (55) opLogico -> . RELATIONAL

    RELATIONAL      shift and go to state 122

    opLogico                       shift and go to state 121

state 95

    (34) estatuto -> pid ASSIGN E . PUNTOYCOMA
    (39) E -> E . PLUS T
    (40) E -> E . MINUS T

    PUNTOYCOMA      shift and go to state 123
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125


state 96

    (41) E -> T .
    (42) T -> T . TIMES F
    (43) T -> T . DIVIDE F

    PUNTOYCOMA      reduce using rule 41 (E -> T .)
    PLUS            reduce using rule 41 (E -> T .)
    MINUS           reduce using rule 41 (E -> T .)
    RPAR            reduce using rule 41 (E -> T .)
    TIMES           shift and go to state 126
    DIVIDE          shift and go to state 127


state 97

    (44) T -> F .

    PUNTOYCOMA      reduce using rule 44 (T -> F .)
    PLUS            reduce using rule 44 (T -> F .)
    MINUS           reduce using rule 44 (T -> F .)
    TIMES           reduce using rule 44 (T -> F .)
    DIVIDE          reduce using rule 44 (T -> F .)
    RPAR            reduce using rule 44 (T -> F .)


state 98

    (45) F -> OP .

    PUNTOYCOMA      reduce using rule 45 (F -> OP .)
    PLUS            reduce using rule 45 (F -> OP .)
    MINUS           reduce using rule 45 (F -> OP .)
    TIMES           reduce using rule 45 (F -> OP .)
    DIVIDE          reduce using rule 45 (F -> OP .)
    RPAR            reduce using rule 45 (F -> OP .)


state 99

    (46) F -> LPAR . E RPAR
    (39) E -> . E PLUS T
    (40) E -> . E MINUS T
    (41) E -> . T
    (42) T -> . T TIMES F
    (43) T -> . T DIVIDE F
    (44) T -> . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    E                              shift and go to state 128
    T                              shift and go to state 96
    F                              shift and go to state 97
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 100

    (78) estatuto -> FOR expresion_for beg1 . stat END
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 129
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 101

    (79) beg1 -> BEGIN .

    CALL            reduce using rule 79 (beg1 -> BEGIN .)
    IF              reduce using rule 79 (beg1 -> BEGIN .)
    FOR             reduce using rule 79 (beg1 -> BEGIN .)
    WHILE           reduce using rule 79 (beg1 -> BEGIN .)
    OUTPUT          reduce using rule 79 (beg1 -> BEGIN .)
    INPUT           reduce using rule 79 (beg1 -> BEGIN .)
    ID              reduce using rule 79 (beg1 -> BEGIN .)
    DO              reduce using rule 79 (beg1 -> BEGIN .)
    END             reduce using rule 79 (beg1 -> BEGIN .)


state 102

    (80) expresion_for -> LPAR id1 . IN numb RPAR
    (81) expresion_for -> LPAR id1 . IN idx RPAR

    IN              shift and go to state 130


state 103

    (85) id1 -> ID .

    IN              reduce using rule 85 (id1 -> ID .)


state 104

    (86) estatuto -> WHILE expresion BB . stat END
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 131
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 105

    (87) BB -> BEGIN .

    CALL            reduce using rule 87 (BB -> BEGIN .)
    IF              reduce using rule 87 (BB -> BEGIN .)
    FOR             reduce using rule 87 (BB -> BEGIN .)
    WHILE           reduce using rule 87 (BB -> BEGIN .)
    OUTPUT          reduce using rule 87 (BB -> BEGIN .)
    INPUT           reduce using rule 87 (BB -> BEGIN .)
    ID              reduce using rule 87 (BB -> BEGIN .)
    DO              reduce using rule 87 (BB -> BEGIN .)
    END             reduce using rule 87 (BB -> BEGIN .)


state 106

    (88) estatuto -> doo stat wh . expresion
    (47) expresion -> . LPAR EL RPAR

    LPAR            shift and go to state 68

    expresion                      shift and go to state 132

state 107

    (90) wh -> DWHILE .

    LPAR            reduce using rule 90 (wh -> DWHILE .)


state 108

    (91) estatuto -> OUTPUT OP PUNTOYCOMA .

    CALL            reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    IF              reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    FOR             reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    WHILE           reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    OUTPUT          reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    INPUT           reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    ID              reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    DO              reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    END             reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    MODULE          reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    MAIN            reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    ELSE            reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)
    DWHILE          reduce using rule 91 (estatuto -> OUTPUT OP PUNTOYCOMA .)


state 109

    (63) mat -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET . ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    NUMBER          shift and go to state 134
    ID              shift and go to state 133


state 110

    (92) estatuto -> INPUT ID PUNTOYCOMA .

    CALL            reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    IF              reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    FOR             reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    WHILE           reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    OUTPUT          reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    INPUT           reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    ID              reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    DO              reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    END             reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    MODULE          reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    MAIN            reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    ELSE            reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)
    DWHILE          reduce using rule 92 (estatuto -> INPUT ID PUNTOYCOMA .)


state 111

    (18) procedure -> MODULE iddd beggg stat enddd procedure .

    MAIN            reduce using rule 18 (procedure -> MODULE iddd beggg stat enddd procedure .)


state 112

    (17) DCLCUBE -> ID NUMBER NUMBER NUMBER .

    PUNTOYCOMA      reduce using rule 17 (DCLCUBE -> ID NUMBER NUMBER NUMBER .)


state 113

    (60) vec -> ID LBRACKET ID RBRACKET .
    (65) mat -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET
    (73) cub -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 60 (vec -> ID LBRACKET ID RBRACKET .)
    LBRACKET        shift and go to state 135


state 114

    (59) vec -> ID LBRACKET NUMBER RBRACKET .
    (63) mat -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET
    (69) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 59 (vec -> ID LBRACKET NUMBER RBRACKET .)
    LBRACKET        shift and go to state 136


state 115

    (30) estatuto -> IF expresion beg stat . els stat END
    (31) estatuto -> IF expresion beg stat . END
    (33) els -> . ELSE

    END             shift and go to state 138
    ELSE            shift and go to state 139

    els                            shift and go to state 137

state 116

    (54) FL -> LPAR EL . LPAR
    (48) EL -> EL . OR TL

    LPAR            shift and go to state 140
    OR              shift and go to state 118


state 117

    (47) expresion -> LPAR EL RPAR .

    BEGIN           reduce using rule 47 (expresion -> LPAR EL RPAR .)
    CALL            reduce using rule 47 (expresion -> LPAR EL RPAR .)
    IF              reduce using rule 47 (expresion -> LPAR EL RPAR .)
    FOR             reduce using rule 47 (expresion -> LPAR EL RPAR .)
    WHILE           reduce using rule 47 (expresion -> LPAR EL RPAR .)
    OUTPUT          reduce using rule 47 (expresion -> LPAR EL RPAR .)
    INPUT           reduce using rule 47 (expresion -> LPAR EL RPAR .)
    ID              reduce using rule 47 (expresion -> LPAR EL RPAR .)
    DO              reduce using rule 47 (expresion -> LPAR EL RPAR .)
    END             reduce using rule 47 (expresion -> LPAR EL RPAR .)
    MODULE          reduce using rule 47 (expresion -> LPAR EL RPAR .)
    MAIN            reduce using rule 47 (expresion -> LPAR EL RPAR .)
    ELSE            reduce using rule 47 (expresion -> LPAR EL RPAR .)
    DWHILE          reduce using rule 47 (expresion -> LPAR EL RPAR .)


state 118

    (48) EL -> EL OR . TL
    (51) TL -> . TL AND FL
    (52) TL -> . FL
    (53) FL -> . OP opLogico OP
    (54) FL -> . LPAR EL LPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 90
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    TL                             shift and go to state 141
    FL                             shift and go to state 93
    OP                             shift and go to state 94
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 119

    (49) EL -> TL NOT .

    RPAR            reduce using rule 49 (EL -> TL NOT .)
    OR              reduce using rule 49 (EL -> TL NOT .)
    LPAR            reduce using rule 49 (EL -> TL NOT .)


state 120

    (51) TL -> TL AND . FL
    (53) FL -> . OP opLogico OP
    (54) FL -> . LPAR EL LPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 90
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    FL                             shift and go to state 142
    OP                             shift and go to state 94
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 121

    (53) FL -> OP opLogico . OP
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    OP                             shift and go to state 143
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 122

    (55) opLogico -> RELATIONAL .

    NUMBER          reduce using rule 55 (opLogico -> RELATIONAL .)
    FLOATNUMBER     reduce using rule 55 (opLogico -> RELATIONAL .)
    ID              reduce using rule 55 (opLogico -> RELATIONAL .)


state 123

    (34) estatuto -> pid ASSIGN E PUNTOYCOMA .

    CALL            reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    IF              reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    FOR             reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    WHILE           reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    OUTPUT          reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    INPUT           reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    ID              reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    DO              reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    END             reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    MODULE          reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    MAIN            reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    ELSE            reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)
    DWHILE          reduce using rule 34 (estatuto -> pid ASSIGN E PUNTOYCOMA .)


state 124

    (39) E -> E PLUS . T
    (42) T -> . T TIMES F
    (43) T -> . T DIVIDE F
    (44) T -> . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    T                              shift and go to state 144
    F                              shift and go to state 97
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 125

    (40) E -> E MINUS . T
    (42) T -> . T TIMES F
    (43) T -> . T DIVIDE F
    (44) T -> . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    T                              shift and go to state 145
    F                              shift and go to state 97
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 126

    (42) T -> T TIMES . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    F                              shift and go to state 146
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 127

    (43) T -> T DIVIDE . F
    (45) F -> . OP
    (46) F -> . LPAR E RPAR
    (56) OP -> . NUMBER
    (57) OP -> . FLOATNUMBER
    (61) OP -> . mat1
    (67) OP -> . cub1
    (77) OP -> . ID
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LPAR            shift and go to state 99
    NUMBER          shift and go to state 75
    FLOATNUMBER     shift and go to state 76
    ID              shift and go to state 79

    F                              shift and go to state 147
    OP                             shift and go to state 98
    mat1                           shift and go to state 77
    cub1                           shift and go to state 78
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 128

    (46) F -> LPAR E . RPAR
    (39) E -> E . PLUS T
    (40) E -> E . MINUS T

    RPAR            shift and go to state 148
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125


state 129

    (78) estatuto -> FOR expresion_for beg1 stat . END

    END             shift and go to state 149


state 130

    (80) expresion_for -> LPAR id1 IN . numb RPAR
    (81) expresion_for -> LPAR id1 IN . idx RPAR
    (82) numb -> . NUMBER
    (83) numb -> . FLOATNUMBER
    (84) idx -> . ID

    NUMBER          shift and go to state 152
    FLOATNUMBER     shift and go to state 153
    ID              shift and go to state 154

    numb                           shift and go to state 150
    idx                            shift and go to state 151

state 131

    (86) estatuto -> WHILE expresion BB stat . END

    END             shift and go to state 155


state 132

    (88) estatuto -> doo stat wh expresion .

    CALL            reduce using rule 88 (estatuto -> doo stat wh expresion .)
    IF              reduce using rule 88 (estatuto -> doo stat wh expresion .)
    FOR             reduce using rule 88 (estatuto -> doo stat wh expresion .)
    WHILE           reduce using rule 88 (estatuto -> doo stat wh expresion .)
    OUTPUT          reduce using rule 88 (estatuto -> doo stat wh expresion .)
    INPUT           reduce using rule 88 (estatuto -> doo stat wh expresion .)
    ID              reduce using rule 88 (estatuto -> doo stat wh expresion .)
    DO              reduce using rule 88 (estatuto -> doo stat wh expresion .)
    END             reduce using rule 88 (estatuto -> doo stat wh expresion .)
    MODULE          reduce using rule 88 (estatuto -> doo stat wh expresion .)
    MAIN            reduce using rule 88 (estatuto -> doo stat wh expresion .)
    ELSE            reduce using rule 88 (estatuto -> doo stat wh expresion .)
    DWHILE          reduce using rule 88 (estatuto -> doo stat wh expresion .)


state 133

    (65) mat -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET
    (73) cub -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID . RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 156


state 134

    (63) mat -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET
    (69) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 157


state 135

    (65) mat -> ID LBRACKET ID RBRACKET LBRACKET . ID RBRACKET
    (66) mat -> ID LBRACKET ID RBRACKET LBRACKET . NUMBER RBRACKET
    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET . ID RBRACKET LBRACKET ID RBRACKET

    ID              shift and go to state 158
    NUMBER          shift and go to state 159


state 136

    (63) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET
    (64) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET . ID RBRACKET
    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET . ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET . ID RBRACKET LBRACKET ID RBRACKET

    NUMBER          shift and go to state 161
    ID              shift and go to state 160


state 137

    (30) estatuto -> IF expresion beg stat els . stat END
    (25) stat -> . estatuto stat
    (26) stat -> .
    (29) estatuto -> . CALL ID PUNTOYCOMA
    (30) estatuto -> . IF expresion beg stat els stat END
    (31) estatuto -> . IF expresion beg stat END
    (34) estatuto -> . pid ASSIGN E PUNTOYCOMA
    (78) estatuto -> . FOR expresion_for beg1 stat END
    (86) estatuto -> . WHILE expresion BB stat END
    (88) estatuto -> . doo stat wh expresion
    (91) estatuto -> . OUTPUT OP PUNTOYCOMA
    (92) estatuto -> . INPUT ID PUNTOYCOMA
    (35) pid -> . ID
    (36) pid -> . vec1
    (37) pid -> . mat1
    (38) pid -> . cub1
    (89) doo -> . DO
    (58) vec1 -> . vec
    (62) mat1 -> . mat
    (68) cub1 -> . cub
    (59) vec -> . ID LBRACKET NUMBER RBRACKET
    (60) vec -> . ID LBRACKET ID RBRACKET
    (63) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (64) mat -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (65) mat -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (66) mat -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (69) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> . ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET
    (73) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> . ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> . ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    END             reduce using rule 26 (stat -> .)
    MODULE          reduce using rule 26 (stat -> .)
    MAIN            reduce using rule 26 (stat -> .)
    ELSE            reduce using rule 26 (stat -> .)
    DWHILE          reduce using rule 26 (stat -> .)
    CALL            shift and go to state 41
    IF              shift and go to state 43
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    ID              shift and go to state 42
    DO              shift and go to state 53

    stat                           shift and go to state 162
    estatuto                       shift and go to state 40
    pid                            shift and go to state 44
    doo                            shift and go to state 47
    vec1                           shift and go to state 50
    mat1                           shift and go to state 51
    cub1                           shift and go to state 52
    vec                            shift and go to state 54
    mat                            shift and go to state 55
    cub                            shift and go to state 56

state 138

    (31) estatuto -> IF expresion beg stat END .

    CALL            reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    IF              reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    FOR             reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    WHILE           reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    OUTPUT          reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    INPUT           reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    ID              reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    DO              reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    END             reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    MODULE          reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    MAIN            reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    ELSE            reduce using rule 31 (estatuto -> IF expresion beg stat END .)
    DWHILE          reduce using rule 31 (estatuto -> IF expresion beg stat END .)


state 139

    (33) els -> ELSE .

    CALL            reduce using rule 33 (els -> ELSE .)
    IF              reduce using rule 33 (els -> ELSE .)
    FOR             reduce using rule 33 (els -> ELSE .)
    WHILE           reduce using rule 33 (els -> ELSE .)
    OUTPUT          reduce using rule 33 (els -> ELSE .)
    INPUT           reduce using rule 33 (els -> ELSE .)
    ID              reduce using rule 33 (els -> ELSE .)
    DO              reduce using rule 33 (els -> ELSE .)
    END             reduce using rule 33 (els -> ELSE .)


state 140

    (54) FL -> LPAR EL LPAR .

    RPAR            reduce using rule 54 (FL -> LPAR EL LPAR .)
    OR              reduce using rule 54 (FL -> LPAR EL LPAR .)
    NOT             reduce using rule 54 (FL -> LPAR EL LPAR .)
    AND             reduce using rule 54 (FL -> LPAR EL LPAR .)
    LPAR            reduce using rule 54 (FL -> LPAR EL LPAR .)


state 141

    (48) EL -> EL OR TL .
    (51) TL -> TL . AND FL

    RPAR            reduce using rule 48 (EL -> EL OR TL .)
    OR              reduce using rule 48 (EL -> EL OR TL .)
    LPAR            reduce using rule 48 (EL -> EL OR TL .)
    AND             shift and go to state 120


state 142

    (51) TL -> TL AND FL .

    RPAR            reduce using rule 51 (TL -> TL AND FL .)
    OR              reduce using rule 51 (TL -> TL AND FL .)
    NOT             reduce using rule 51 (TL -> TL AND FL .)
    AND             reduce using rule 51 (TL -> TL AND FL .)
    LPAR            reduce using rule 51 (TL -> TL AND FL .)


state 143

    (53) FL -> OP opLogico OP .

    RPAR            reduce using rule 53 (FL -> OP opLogico OP .)
    OR              reduce using rule 53 (FL -> OP opLogico OP .)
    NOT             reduce using rule 53 (FL -> OP opLogico OP .)
    AND             reduce using rule 53 (FL -> OP opLogico OP .)
    LPAR            reduce using rule 53 (FL -> OP opLogico OP .)


state 144

    (39) E -> E PLUS T .
    (42) T -> T . TIMES F
    (43) T -> T . DIVIDE F

    PUNTOYCOMA      reduce using rule 39 (E -> E PLUS T .)
    PLUS            reduce using rule 39 (E -> E PLUS T .)
    MINUS           reduce using rule 39 (E -> E PLUS T .)
    RPAR            reduce using rule 39 (E -> E PLUS T .)
    TIMES           shift and go to state 126
    DIVIDE          shift and go to state 127


state 145

    (40) E -> E MINUS T .
    (42) T -> T . TIMES F
    (43) T -> T . DIVIDE F

    PUNTOYCOMA      reduce using rule 40 (E -> E MINUS T .)
    PLUS            reduce using rule 40 (E -> E MINUS T .)
    MINUS           reduce using rule 40 (E -> E MINUS T .)
    RPAR            reduce using rule 40 (E -> E MINUS T .)
    TIMES           shift and go to state 126
    DIVIDE          shift and go to state 127


state 146

    (42) T -> T TIMES F .

    PUNTOYCOMA      reduce using rule 42 (T -> T TIMES F .)
    PLUS            reduce using rule 42 (T -> T TIMES F .)
    MINUS           reduce using rule 42 (T -> T TIMES F .)
    TIMES           reduce using rule 42 (T -> T TIMES F .)
    DIVIDE          reduce using rule 42 (T -> T TIMES F .)
    RPAR            reduce using rule 42 (T -> T TIMES F .)


state 147

    (43) T -> T DIVIDE F .

    PUNTOYCOMA      reduce using rule 43 (T -> T DIVIDE F .)
    PLUS            reduce using rule 43 (T -> T DIVIDE F .)
    MINUS           reduce using rule 43 (T -> T DIVIDE F .)
    TIMES           reduce using rule 43 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 43 (T -> T DIVIDE F .)
    RPAR            reduce using rule 43 (T -> T DIVIDE F .)


state 148

    (46) F -> LPAR E RPAR .

    PUNTOYCOMA      reduce using rule 46 (F -> LPAR E RPAR .)
    PLUS            reduce using rule 46 (F -> LPAR E RPAR .)
    MINUS           reduce using rule 46 (F -> LPAR E RPAR .)
    TIMES           reduce using rule 46 (F -> LPAR E RPAR .)
    DIVIDE          reduce using rule 46 (F -> LPAR E RPAR .)
    RPAR            reduce using rule 46 (F -> LPAR E RPAR .)


state 149

    (78) estatuto -> FOR expresion_for beg1 stat END .

    CALL            reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    IF              reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    FOR             reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    WHILE           reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    OUTPUT          reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    INPUT           reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    ID              reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    DO              reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    END             reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    MODULE          reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    MAIN            reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    ELSE            reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)
    DWHILE          reduce using rule 78 (estatuto -> FOR expresion_for beg1 stat END .)


state 150

    (80) expresion_for -> LPAR id1 IN numb . RPAR

    RPAR            shift and go to state 163


state 151

    (81) expresion_for -> LPAR id1 IN idx . RPAR

    RPAR            shift and go to state 164


state 152

    (82) numb -> NUMBER .

    RPAR            reduce using rule 82 (numb -> NUMBER .)


state 153

    (83) numb -> FLOATNUMBER .

    RPAR            reduce using rule 83 (numb -> FLOATNUMBER .)


state 154

    (84) idx -> ID .

    RPAR            reduce using rule 84 (idx -> ID .)


state 155

    (86) estatuto -> WHILE expresion BB stat END .

    CALL            reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    IF              reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    FOR             reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    WHILE           reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    OUTPUT          reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    INPUT           reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    ID              reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    DO              reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    END             reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    MODULE          reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    MAIN            reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    ELSE            reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)
    DWHILE          reduce using rule 86 (estatuto -> WHILE expresion BB stat END .)


state 156

    (65) mat -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET
    (66) mat -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET
    (73) cub -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (75) cub -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET . LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LBRACKET        shift and go to state 135


state 157

    (63) mat -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET
    (64) mat -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET
    (69) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET
    (71) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET LBRACKET ID RBRACKET

    LBRACKET        shift and go to state 136


state 158

    (65) mat -> ID LBRACKET ID RBRACKET LBRACKET ID . RBRACKET
    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET ID . RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 165


state 159

    (66) mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER . RBRACKET
    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 166


state 160

    (64) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID . RBRACKET
    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID . RBRACKET LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID . RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 167


state 161

    (63) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET
    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET LBRACKET ID RBRACKET

    RBRACKET        shift and go to state 168


state 162

    (30) estatuto -> IF expresion beg stat els stat . END

    END             shift and go to state 169


state 163

    (80) expresion_for -> LPAR id1 IN numb RPAR .

    BEGIN           reduce using rule 80 (expresion_for -> LPAR id1 IN numb RPAR .)


state 164

    (81) expresion_for -> LPAR id1 IN idx RPAR .

    BEGIN           reduce using rule 81 (expresion_for -> LPAR id1 IN idx RPAR .)


state 165

    (65) mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .
    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET . LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 65 (mat -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    LBRACKET        shift and go to state 170


state 166

    (66) mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .
    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 66 (mat -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    LBRACKET        shift and go to state 171


state 167

    (64) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .
    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET . LBRACKET NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET . LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 64 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    LBRACKET        shift and go to state 172


state 168

    (63) mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .
    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET . LBRACKET ID RBRACKET

    ASSIGN          reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 63 (mat -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    LBRACKET        shift and go to state 173


state 169

    (30) estatuto -> IF expresion beg stat els stat END .

    CALL            reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    IF              reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    FOR             reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    WHILE           reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    OUTPUT          reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    INPUT           reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    ID              reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    DO              reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    END             reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    MODULE          reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    MAIN            reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    ELSE            reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)
    DWHILE          reduce using rule 30 (estatuto -> IF expresion beg stat els stat END .)


state 170

    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET . NUMBER RBRACKET
    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET . ID RBRACKET

    NUMBER          shift and go to state 175
    ID              shift and go to state 174


state 171

    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET
    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET . ID RBRACKET

    NUMBER          shift and go to state 177
    ID              shift and go to state 176


state 172

    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET . NUMBER RBRACKET
    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET . ID RBRACKET

    NUMBER          shift and go to state 179
    ID              shift and go to state 178


state 173

    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET
    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET . ID RBRACKET

    NUMBER          shift and go to state 181
    ID              shift and go to state 180


state 174

    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 182


state 175

    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 183


state 176

    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 184


state 177

    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 185


state 178

    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 186


state 179

    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 187


state 180

    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 188


state 181

    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 189


state 182

    (76) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .

    ASSIGN          reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 76 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)


state 183

    (75) cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .

    ASSIGN          reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 75 (cub -> ID LBRACKET ID RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)


state 184

    (74) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .

    ASSIGN          reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 74 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)


state 185

    (73) cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .

    ASSIGN          reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 73 (cub -> ID LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)


state 186

    (72) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .

    ASSIGN          reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 72 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET ID RBRACKET .)


state 187

    (71) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .

    ASSIGN          reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 71 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET LBRACKET NUMBER RBRACKET .)


state 188

    (70) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .

    ASSIGN          reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PUNTOYCOMA      reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RELATIONAL      reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    RPAR            reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    OR              reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    NOT             reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    AND             reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)
    LPAR            reduce using rule 70 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET ID RBRACKET .)


state 189

    (69) cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .

    ASSIGN          reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PUNTOYCOMA      reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RELATIONAL      reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    NOT             reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    LPAR            reduce using rule 69 (cub -> ID LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)

