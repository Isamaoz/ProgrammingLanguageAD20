
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'AND ASSIGN BEGIN CALL COMA CUBE DECLARATION DIFF DIVIDE DO DWHILE ELSE END ENDECLARATION ESIGUAL FINISH FLOAT FLOATNUMBER FOR ID IF IFELSE IN INPUT INT LBRACKET LPAR MAIN MATRIX MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MINUS MODULE NOT NUMBER OR OUTPUT PLUS PUNTOYCOMA RBRACKET RELATIONAL RPAR START STRING TIMES VECTOR WHILE\n    program : st var_dec procedure main_block FINISH\n    \n    st : START\n    \n    var_dec : DECLARATION decl ENDECLARATION\n            |\n    \n    decl : type variable PUNTOYCOMA\n         |  decl type variable PUNTOYCOMA\n         |  decl dimtype PUNTOYCOMA\n\n    \n    variable : ID\n             | variable COMA ID\n    \n    type : INT\n         | FLOAT\n    \n    dimtype : VECTOR DCLVECTOR\n    \n    dimtype : MATRIX DCLMATRIX\n    \n    dimtype : CUBE DCLCUBE\n    \n    DCLVECTOR : ID NUMBER\n    \n    DCLMATRIX : ID NUMBER NUMBER\n    \n    DCLCUBE : ID NUMBER NUMBER NUMBER\n    \n    procedure : MODULE iddd beggg stat enddd procedure\n                |\n    \n    iddd : ID\n    \n    beggg : BEGIN\n            |\n    \n    enddd : END\n            |\n    \n    stat : estatuto stat\n          |\n    \n    main_block : MAIN be stat END\n    \n     be : BEGIN\n    \n     estatuto : CALL ID PUNTOYCOMA\n     \n     estatuto : IF expresion beg stat els stat END\n                | IF expresion beg stat END\n     \n     beg : BEGIN\n     \n     els : ELSE\n     \n     estatuto : pid ASSIGN E PUNTOYCOMA\n     \n    pid : ID\n    \n     E : E PLUS T\n        | E MINUS T\n     \n     E : T\n     \n     T : T TIMES F\n        | T DIVIDE F\n     \n     T : F\n     \n     F : OP\n     \n     F : LPAR E RPAR\n     \n     expresion : LPAR EL RPAR\n     \n     EL : EL OR TL\n     \n     EL : TL NOT\n     \n     EL : TL\n     \n     TL : TL AND FL\n     \n     TL : FL\n     \n     FL : OP opLogico OP\n     \n     FL : LPAR EL LPAR\n     \n     opLogico : RELATIONAL\n\n     \n     OP : NUMBER\n     \n     OP : FLOATNUMBER\n     \n     OP : vec\n     \n     vec : ID LBRACKET NUMBER RBRACKET\n        | ID LBRACKET ID RBRACKET\n     \n     mat : ID LBRACKET OP RBRACKET LBRACKET OP RBRACKET\n     \n     OP : cub\n     \n     cub : ID LBRACKET OP RBRACKET LBRACKET OP RBRACKET LBRACKET OP RBRACKET\n     \n     OP : ID\n     \n    estatuto : FOR expresion_for beg1 stat END\n    \n     beg1 : BEGIN\n     \n     expresion_for : LPAR id1 IN numb RPAR\n                    | LPAR id1 IN idx RPAR\n     \n     numb : NUMBER\n     \n     numb : FLOATNUMBER\n     \n     idx : ID\n     \n     id1 : ID\n     \n    estatuto : WHILE expresion BB stat END\n    \n    BB : BEGIN\n    \n    estatuto : doo stat wh expresion\n    \n    doo : DO\n    \n    wh : DWHILE\n    \n    estatuto : OUTPUT OP PUNTOYCOMA\n    \n    estatuto : INPUT ID PUNTOYCOMA\n    '
    
_lr_action_items = {'START':([0,],[3,]),'$end':([1,24,],[0,-1,]),'DECLARATION':([2,3,],[5,-2,]),'MODULE':([2,3,4,14,15,16,25,27,28,40,47,51,58,74,75,78,79,91,95,99,101,106,112,121,125,126,137,143,151,],[-4,-2,7,-22,-20,-3,-26,-26,-21,-26,-26,-24,-25,7,-23,-29,-26,-26,-26,-75,-76,-44,-34,-72,-26,-31,-62,-70,-30,]),'MAIN':([2,3,4,6,14,15,16,25,27,28,40,47,51,58,74,75,78,79,91,95,99,101,102,106,112,121,125,126,137,143,151,],[-4,-2,-19,13,-22,-20,-3,-26,-26,-21,-26,-26,-24,-25,-19,-23,-29,-26,-26,-26,-75,-76,-18,-44,-34,-72,-26,-31,-62,-70,-30,]),'INT':([5,8,30,37,52,],[10,10,-7,-5,-6,]),'FLOAT':([5,8,30,37,52,],[11,11,-7,-5,-6,]),'ID':([7,9,10,11,14,15,17,19,20,21,25,26,27,28,38,40,41,47,48,49,50,61,62,64,78,79,80,81,90,91,92,95,96,99,100,101,106,107,109,110,111,112,113,114,115,116,119,121,125,126,127,137,143,150,151,154,],[15,23,-10,-11,-22,-20,23,32,34,36,42,-28,42,-21,56,42,59,42,72,73,-73,72,72,94,-29,42,-32,72,72,42,-63,42,-71,-75,122,-76,-44,72,72,72,-52,-34,72,72,72,72,142,-72,42,-31,-33,-62,-70,72,-30,72,]),'ENDECLARATION':([8,30,37,52,],[16,-7,-5,-6,]),'VECTOR':([8,30,37,52,],[19,-7,-5,-6,]),'MATRIX':([8,30,37,52,],[20,-7,-5,-6,]),'CUBE':([8,30,37,52,],[21,-7,-5,-6,]),'FINISH':([12,57,],[24,-27,]),'BEGIN':([13,14,15,60,63,65,106,148,149,],[26,28,-20,80,92,96,-44,-64,-65,]),'CALL':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,41,-28,41,-21,41,41,-73,-29,41,-32,41,-63,41,-71,-75,-76,-44,-34,-72,41,-31,-33,-62,-70,-30,]),'IF':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,43,-28,43,-21,43,43,-73,-29,43,-32,43,-63,43,-71,-75,-76,-44,-34,-72,43,-31,-33,-62,-70,-30,]),'FOR':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,45,-28,45,-21,45,45,-73,-29,45,-32,45,-63,45,-71,-75,-76,-44,-34,-72,45,-31,-33,-62,-70,-30,]),'WHILE':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,46,-28,46,-21,46,46,-73,-29,46,-32,46,-63,46,-71,-75,-76,-44,-34,-72,46,-31,-33,-62,-70,-30,]),'OUTPUT':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,48,-28,48,-21,48,48,-73,-29,48,-32,48,-63,48,-71,-75,-76,-44,-34,-72,48,-31,-33,-62,-70,-30,]),'INPUT':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,49,-28,49,-21,49,49,-73,-29,49,-32,49,-63,49,-71,-75,-76,-44,-34,-72,49,-31,-33,-62,-70,-30,]),'DO':([14,15,25,26,27,28,40,47,50,78,79,80,91,92,95,96,99,101,106,112,121,125,126,127,137,143,151,],[-22,-20,50,-28,50,-21,50,50,-73,-29,50,-32,50,-63,50,-71,-75,-76,-44,-34,-72,50,-31,-33,-62,-70,-30,]),'END':([14,15,25,26,27,28,39,40,47,51,58,78,79,80,91,92,95,96,99,101,104,106,112,118,120,121,125,126,127,137,143,147,151,],[-22,-20,-26,-28,-26,-21,57,-26,-26,75,-25,-29,-26,-32,-26,-63,-26,-71,-75,-76,126,-44,-34,137,143,-72,-26,-31,-33,-62,-70,151,-30,]),'PUNTOYCOMA':([18,22,23,29,31,33,35,53,56,59,67,68,69,70,71,72,73,76,86,87,88,89,103,122,123,132,133,134,135,136,144,145,156,],[30,37,-8,52,-12,-13,-14,-15,-9,78,99,-53,-54,-55,-59,-61,101,-16,112,-38,-41,-42,-17,-61,-53,-36,-37,-39,-40,-43,-57,-56,-60,]),'COMA':([22,23,29,56,],[38,-8,38,-9,]),'ELSE':([25,27,40,47,58,78,79,80,91,95,99,101,104,106,112,121,125,126,137,143,151,],[-26,-26,-26,-26,-25,-29,-26,-32,-26,-26,-75,-76,127,-44,-34,-72,-26,-31,-62,-70,-30,]),'DWHILE':([25,27,40,47,50,58,66,78,79,91,95,99,101,106,112,121,125,126,137,143,151,],[-26,-26,-26,-26,-73,-25,98,-29,-26,-26,-26,-75,-76,-44,-34,-72,-26,-31,-62,-70,-30,]),'NUMBER':([32,34,36,48,54,55,61,62,77,81,90,100,107,109,110,111,113,114,115,116,119,150,154,],[53,54,55,68,76,77,68,68,103,68,68,123,68,68,68,-52,68,68,68,68,140,68,68,]),'ASSIGN':([42,44,],[-35,62,]),'LPAR':([43,45,46,61,62,68,69,70,71,72,81,83,84,90,97,98,105,107,108,109,113,114,115,116,122,123,128,129,130,131,144,145,156,],[61,64,61,81,90,-53,-54,-55,-59,-61,81,-47,-49,90,61,-74,128,81,-46,81,90,90,90,90,-61,-53,-51,-45,-48,-50,-57,-56,-60,]),'FLOATNUMBER':([48,61,62,81,90,100,107,109,110,111,113,114,115,116,119,150,154,],[69,69,69,69,69,69,69,69,69,-52,69,69,69,69,141,69,69,]),'PLUS':([68,69,70,71,72,86,87,88,89,117,122,123,132,133,134,135,136,144,145,156,],[-53,-54,-55,-59,-61,113,-38,-41,-42,113,-61,-53,-36,-37,-39,-40,-43,-57,-56,-60,]),'MINUS':([68,69,70,71,72,86,87,88,89,117,122,123,132,133,134,135,136,144,145,156,],[-53,-54,-55,-59,-61,114,-38,-41,-42,114,-61,-53,-36,-37,-39,-40,-43,-57,-56,-60,]),'TIMES':([68,69,70,71,72,87,88,89,122,123,132,133,134,135,136,144,145,156,],[-53,-54,-55,-59,-61,115,-41,-42,-61,-53,115,115,-39,-40,-43,-57,-56,-60,]),'DIVIDE':([68,69,70,71,72,87,88,89,122,123,132,133,134,135,136,144,145,156,],[-53,-54,-55,-59,-61,116,-41,-42,-61,-53,116,116,-39,-40,-43,-57,-56,-60,]),'RELATIONAL':([68,69,70,71,72,85,122,123,144,145,156,],[-53,-54,-55,-59,-61,111,-61,-53,-57,-56,-60,]),'RPAR':([68,69,70,71,72,82,83,84,87,88,89,108,117,122,123,128,129,130,131,132,133,134,135,136,138,139,140,141,142,144,145,156,],[-53,-54,-55,-59,-61,106,-47,-49,-38,-41,-42,-46,136,-61,-53,-51,-45,-48,-50,-36,-37,-39,-40,-43,148,149,-66,-67,-68,-57,-56,-60,]),'OR':([68,69,70,71,72,82,83,84,105,108,122,123,128,129,130,131,144,145,156,],[-53,-54,-55,-59,-61,107,-47,-49,107,-46,-61,-53,-51,-45,-48,-50,-57,-56,-60,]),'NOT':([68,69,70,71,72,83,84,122,123,128,130,131,144,145,156,],[-53,-54,-55,-59,-61,108,-49,-61,-53,-51,-48,-50,-57,-56,-60,]),'AND':([68,69,70,71,72,83,84,122,123,128,129,130,131,144,145,156,],[-53,-54,-55,-59,-61,109,-49,-61,-53,-51,109,-48,-50,-57,-56,-60,]),'RBRACKET':([68,69,70,71,72,122,123,124,144,145,152,155,156,],[-53,-54,-55,-59,-61,144,145,146,-57,-56,153,156,-60,]),'LBRACKET':([72,122,146,153,],[100,100,150,154,]),'IN':([93,94,],[119,-69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'st':([0,],[2,]),'var_dec':([2,],[4,]),'procedure':([4,74,],[6,102,]),'decl':([5,],[8,]),'type':([5,8,],[9,17,]),'main_block':([6,],[12,]),'iddd':([7,],[14,]),'dimtype':([8,],[18,]),'variable':([9,17,],[22,29,]),'be':([13,],[25,]),'beggg':([14,],[27,]),'DCLVECTOR':([19,],[31,]),'DCLMATRIX':([20,],[33,]),'DCLCUBE':([21,],[35,]),'stat':([25,27,40,47,79,91,95,125,],[39,51,58,66,104,118,120,147,]),'estatuto':([25,27,40,47,79,91,95,125,],[40,40,40,40,40,40,40,40,]),'pid':([25,27,40,47,79,91,95,125,],[44,44,44,44,44,44,44,44,]),'doo':([25,27,40,47,79,91,95,125,],[47,47,47,47,47,47,47,47,]),'expresion':([43,46,97,],[60,65,121,]),'expresion_for':([45,],[63,]),'OP':([48,61,62,81,90,100,107,109,110,113,114,115,116,150,154,],[67,85,89,85,89,124,85,85,131,89,89,89,89,152,155,]),'vec':([48,61,62,81,90,100,107,109,110,113,114,115,116,150,154,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'cub':([48,61,62,81,90,100,107,109,110,113,114,115,116,150,154,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'enddd':([51,],[74,]),'beg':([60,],[79,]),'EL':([61,81,],[82,105,]),'TL':([61,81,107,],[83,83,129,]),'FL':([61,81,107,109,],[84,84,84,130,]),'E':([62,90,],[86,117,]),'T':([62,90,113,114,],[87,87,132,133,]),'F':([62,90,113,114,115,116,],[88,88,88,88,134,135,]),'beg1':([63,],[91,]),'id1':([64,],[93,]),'BB':([65,],[95,]),'wh':([66,],[97,]),'opLogico':([85,],[110,]),'els':([104,],[125,]),'numb':([119,],[138,]),'idx':([119,],[139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> st var_dec procedure main_block FINISH','program',5,'p_program','ansintactico.py',15),
  ('st -> START','st',1,'p_program1','ansintactico.py',20),
  ('var_dec -> DECLARATION decl ENDECLARATION','var_dec',3,'p_variable_dec','ansintactico.py',26),
  ('var_dec -> <empty>','var_dec',0,'p_variable_dec','ansintactico.py',27),
  ('decl -> type variable PUNTOYCOMA','decl',3,'p_decl','ansintactico.py',32),
  ('decl -> decl type variable PUNTOYCOMA','decl',4,'p_decl','ansintactico.py',33),
  ('decl -> decl dimtype PUNTOYCOMA','decl',3,'p_decl','ansintactico.py',34),
  ('variable -> ID','variable',1,'p_variable','ansintactico.py',58),
  ('variable -> variable COMA ID','variable',3,'p_variable','ansintactico.py',59),
  ('type -> INT','type',1,'p_type','ansintactico.py',68),
  ('type -> FLOAT','type',1,'p_type','ansintactico.py',69),
  ('dimtype -> VECTOR DCLVECTOR','dimtype',2,'p_type2','ansintactico.py',75),
  ('dimtype -> MATRIX DCLMATRIX','dimtype',2,'p_type3','ansintactico.py',80),
  ('dimtype -> CUBE DCLCUBE','dimtype',2,'p_type4','ansintactico.py',85),
  ('DCLVECTOR -> ID NUMBER','DCLVECTOR',2,'p_ddec','ansintactico.py',90),
  ('DCLMATRIX -> ID NUMBER NUMBER','DCLMATRIX',3,'p_ddec1','ansintactico.py',98),
  ('DCLCUBE -> ID NUMBER NUMBER NUMBER','DCLCUBE',4,'p_ddec2','ansintactico.py',106),
  ('procedure -> MODULE iddd beggg stat enddd procedure','procedure',6,'p_procedure','ansintactico.py',112),
  ('procedure -> <empty>','procedure',0,'p_procedure','ansintactico.py',113),
  ('iddd -> ID','iddd',1,'p_procedureid','ansintactico.py',118),
  ('beggg -> BEGIN','beggg',1,'p_procedure1','ansintactico.py',124),
  ('beggg -> <empty>','beggg',0,'p_procedure1','ansintactico.py',125),
  ('enddd -> END','enddd',1,'p_procedure2','ansintactico.py',133),
  ('enddd -> <empty>','enddd',0,'p_procedure2','ansintactico.py',134),
  ('stat -> estatuto stat','stat',2,'p_estatutos','ansintactico.py',143),
  ('stat -> <empty>','stat',0,'p_estatutos','ansintactico.py',144),
  ('main_block -> MAIN be stat END','main_block',4,'p_mainblock','ansintactico.py',148),
  ('be -> BEGIN','be',1,'p_mainblock1','ansintactico.py',152),
  ('estatuto -> CALL ID PUNTOYCOMA','estatuto',3,'p_CALL','ansintactico.py',158),
  ('estatuto -> IF expresion beg stat els stat END','estatuto',7,'p_Sif','ansintactico.py',169),
  ('estatuto -> IF expresion beg stat END','estatuto',5,'p_Sif','ansintactico.py',170),
  ('beg -> BEGIN','beg',1,'p_Sif1','ansintactico.py',175),
  ('els -> ELSE','els',1,'p_Sif2','ansintactico.py',180),
  ('estatuto -> pid ASSIGN E PUNTOYCOMA','estatuto',4,'p_Saritmetico','ansintactico.py',185),
  ('pid -> ID','pid',1,'p_id','ansintactico.py',191),
  ('E -> E PLUS T','E',3,'p_E1','ansintactico.py',202),
  ('E -> E MINUS T','E',3,'p_E1','ansintactico.py',203),
  ('E -> T','E',1,'p_E2','ansintactico.py',209),
  ('T -> T TIMES F','T',3,'p_T1','ansintactico.py',213),
  ('T -> T DIVIDE F','T',3,'p_T1','ansintactico.py',214),
  ('T -> F','T',1,'p_T2','ansintactico.py',219),
  ('F -> OP','F',1,'p_F1','ansintactico.py',223),
  ('F -> LPAR E RPAR','F',3,'p_F3','ansintactico.py',227),
  ('expresion -> LPAR EL RPAR','expresion',3,'p_expresion','ansintactico.py',232),
  ('EL -> EL OR TL','EL',3,'p_EL1','ansintactico.py',236),
  ('EL -> TL NOT','EL',2,'p_EL2','ansintactico.py',241),
  ('EL -> TL','EL',1,'p_EL3','ansintactico.py',246),
  ('TL -> TL AND FL','TL',3,'p_TL1','ansintactico.py',250),
  ('TL -> FL','TL',1,'p_TL2','ansintactico.py',255),
  ('FL -> OP opLogico OP','FL',3,'p_FL1','ansintactico.py',259),
  ('FL -> LPAR EL LPAR','FL',3,'p_FL2','ansintactico.py',264),
  ('opLogico -> RELATIONAL','opLogico',1,'p_opLogico','ansintactico.py',268),
  ('OP -> NUMBER','OP',1,'p_OP2','ansintactico.py',274),
  ('OP -> FLOATNUMBER','OP',1,'p_OP3','ansintactico.py',279),
  ('OP -> vec','OP',1,'p_OPVector','ansintactico.py',285),
  ('vec -> ID LBRACKET NUMBER RBRACKET','vec',4,'p_OPVector1','ansintactico.py',302),
  ('vec -> ID LBRACKET ID RBRACKET','vec',4,'p_OPVector1','ansintactico.py',303),
  ('mat -> ID LBRACKET OP RBRACKET LBRACKET OP RBRACKET','mat',7,'p_OPMatrix','ansintactico.py',313),
  ('OP -> cub','OP',1,'p_OPCube','ansintactico.py',318),
  ('cub -> ID LBRACKET OP RBRACKET LBRACKET OP RBRACKET LBRACKET OP RBRACKET','cub',10,'p_OPCube1','ansintactico.py',323),
  ('OP -> ID','OP',1,'p_OP1','ansintactico.py',327),
  ('estatuto -> FOR expresion_for beg1 stat END','estatuto',5,'p_Sfor','ansintactico.py',333),
  ('beg1 -> BEGIN','beg1',1,'p_Sfor1','ansintactico.py',338),
  ('expresion_for -> LPAR id1 IN numb RPAR','expresion_for',5,'p_expresion_for','ansintactico.py',343),
  ('expresion_for -> LPAR id1 IN idx RPAR','expresion_for',5,'p_expresion_for','ansintactico.py',344),
  ('numb -> NUMBER','numb',1,'p_expresion_for1','ansintactico.py',349),
  ('numb -> FLOATNUMBER','numb',1,'p_expresion_for4','ansintactico.py',354),
  ('idx -> ID','idx',1,'p_expresion_for2','ansintactico.py',359),
  ('id1 -> ID','id1',1,'p_expresion_for3','ansintactico.py',366),
  ('estatuto -> WHILE expresion BB stat END','estatuto',5,'p_Swhile','ansintactico.py',373),
  ('BB -> BEGIN','BB',1,'p_Swhile1','ansintactico.py',378),
  ('estatuto -> doo stat wh expresion','estatuto',4,'p_Sdowhile','ansintactico.py',386),
  ('doo -> DO','doo',1,'p_Sdowhile1','ansintactico.py',391),
  ('wh -> DWHILE','wh',1,'p_Sdowhile2','ansintactico.py',397),
  ('estatuto -> OUTPUT OP PUNTOYCOMA','estatuto',3,'p_Soutput','ansintactico.py',401),
  ('estatuto -> INPUT ID PUNTOYCOMA','estatuto',3,'p_Sinput','ansintactico.py',409),
]
